name: goreleaser

on:
  push:
    # run only against tags
    tags:
      - "*"

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags

      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22"
          cache: true

      - uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.22.1
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GHTOKEN_GORELEASER }}
          CHOCOLATEY_APIKEY: ${{ secrets.CHOCOLATEY_APIKEY }}

      - run: echo ("VERSION_NAME=" + $env:GITHUB_REF_NAME.TrimStart("v")) >> $env:GITHUB_ENV
      - run: echo $VERSION_NAME

      - uses: actions/upload-artifact@v3
        with:
          name: goreleaser-deb
          path: dist/globalping_${{ env.VERSION_NAME }}_linux_amd64.deb
      - uses: actions/upload-artifact@v3
        with:
          name: goreleaser-rpm
          path: dist/globalping_${{ env.VERSION_NAME }}_linux_amd64.rpm
      - uses: actions/upload-artifact@v3
        with:
          name: goreleaser-windows
          path: |
            dist/globalping_Windows_arm64.zip
            dist/globalping_Windows_x86_64.zip
            dist/globalping_Windows_i386.zip

  release_linux:
    needs: goreleaser
    runs-on: ubuntu-latest
    env:
      PACKAGECLOUD_USER: jsdelivr
      PACKAGECLOUD_REPO: globalping
      PACKAGECLOUD_APIKEY: ${{ secrets.PACKAGECLOUD_APIKEY }}
      PACKAGECLOUD_MAX_DISTRO_VERSIONS_TO_SUPPORT: ${{ vars.PACKAGECLOUD_MAX_DISTRO_VERSIONS_TO_SUPPORT }}
      PACKAGECLOUD_MAX_PACKAGE_VERSIONS_TO_KEEP: ${{ vars.PACKAGECLOUD_MAX_PACKAGE_VERSIONS_TO_KEEP }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: ">=1.22"
          cache: true

      - uses: actions/download-artifact@v3
        with:
          name: goreleaser-deb
      - uses: actions/download-artifact@v3
        with:
          name: goreleaser-rpm

      - run: echo "VERSION_NAME=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV
      - run: ls -la

      - run: go run packagecloud/main.go upload "globalping_${{ env.VERSION_NAME }}_linux_amd64.deb" "deb"
      - run: go run packagecloud/main.go upload "globalping_${{ env.VERSION_NAME }}_linux_amd64.rpm" "rpm"
      - run: go run packagecloud/main.go cleanup

  release_windows:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: goreleaser-windows

      - run: echo "VERSION_NAME=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV
      - run: ls -la

      - name: Release to Winget
        uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: jsdelivr.Globalping
          installers-regex: "Windows_(arm64|x86_64|i386).zip"
          version: ${{ env.VERSION_NAME }}
          max-versions-to-keep: 5
          token: ${{ secrets.GHTOKEN_WINGET }}
